using Microsoft.VisualBasic.ApplicationServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SQLite;
using System.Drawing;
using System.Linq;
using System.Net;
using System.Net.Mail;
using System.Net.NetworkInformation;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace UserAppLatest
{
    public partial class ForgotPassword : Form
    {
        String randomCode;
        public static String to;
        string username;
        int UserLevel = 0;
        string userID = "";
        public ForgotPassword()
        {
            InitializeComponent();
        }
        /// <summary>
        /// This function assigns admin name which is present in the database.
        /// </summary>
        private void getAdmin()
        {
            SQLiteConnection conn = new SQLiteConnection("Data Source=test.db;Version=3");

            string checkExistenceSQL = "SELECT username FROM userApp WHERE userlevel = 1";

            SQLiteCommand checkExistenceCommand = new SQLiteCommand(checkExistenceSQL, conn);

            try
            {
                conn.Open();
                username = Convert.ToString(checkExistenceCommand.ExecuteScalar());
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }
            finally
            {
                conn.Close();
            }
        }

        /// <summary>
        /// GENERATES THE OTP 
        /// </summary>
        private void generateOtp()
        {
            String from, pass, messageBody;
            Random rand = new Random();
            randomCode = (rand.Next(999999)).ToString();
            MailMessage message = new MailMessage();
            // to = (txtEmail.Text).ToString(); // OTP will be recieved in this mail.
            to = "cs21btech11059@iith.ac.in";
            from = "usmmteja@gmail.com"; // OTP generated by this mail.
            pass = "syxnjjzkgnbopumd"; // pass code
            messageBody = "Your reset code is " + randomCode;
            message.To.Add(to); // SYNTAX is certain
            message.From = new MailAddress(from);
            message.Body = messageBody;
            message.Subject = "Password Reset Code";
            /* It is used to send Emails */
            SmtpClient smtp = new SmtpClient("smtp.gmail.com");
            smtp.EnableSsl = true; // This enables SSL encryption for safe communication
            smtp.Port = 587;
            smtp.DeliveryMethod = SmtpDeliveryMethod.Network; // we set the delivary method
            smtp.Credentials = new NetworkCredential(from, pass);
            try
            {
                smtp.Send(message);
                MessageBox.Show("Code sent Successfully");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        /// FOR CHECKING INTERCONNECTIVITY.
        /// </summary>
        /// <returns></returns>
        public bool pingStatus()
        {
            bool pingstatus = false;
            string hostNameOrAddress = "Google.com";
            using (Ping p = new Ping())
            {
                string data = "aaaaaaaaa";
                byte[] buffer = Encoding.ASCII.GetBytes(data);
                int timeout = 1000;
                try
                {
                    PingReply reply = p.Send(hostNameOrAddress, timeout, buffer);
                    pingstatus = (reply.Status == IPStatus.Success);
                }
                catch (Exception ex)
                {
                    pingstatus = false;
                }
                return pingstatus;
            }
        }

        private void verify()
        {
            if (txtEmail.Text == randomCode)
            {
                    MessageBox.Show("OTP verified Successfully.");
                    this.Close();
                if (pingStatus() == true)
                {
                    ChangePassword changePassword = new ChangePassword(username);
                    changePassword.ShowDialog();
                }
                else
                {
                    InternetConnectivity internetConnectivity = new InternetConnectivity();
                    internetConnectivity.ShowDialog();
                }
            }
            else
            {
                MessageBox.Show("OTP Invalid.");
            }
        }

        private void verifyOTP_Click(object sender, EventArgs e)
        {
            if(pingStatus() == true)
            {
                verify();
            }
            else
            {
                // Displaying the interconnectivity status
                InternetConnectivity internetConnectivity = new InternetConnectivity();
                internetConnectivity.ShowDialog();
            }
        }

        private void ForgotPassword_Load(object sender, EventArgs e)
        {
            getAdmin();
            if (pingStatus() == true)
            {
                generateOtp();
            }
            else
            {
                // Displaying the interconnectivity status
                InternetConnectivity internetConnectivity = new InternetConnectivity();
                internetConnectivity.ShowDialog();
            }
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }
    }
}
