<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2Button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        h2DjvW4k8n+sBXfjLSDvsQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAA7FJREFUWEflmE3IV0UUh9+yEl20kAxNUPsSbZdYaroz0CAL+xA03EQYpTsDkVzm
        otBQy6JCIjeRO7FNglCBlpbYpjYKaQblIsGspI36PPA/Me917ufrff9FP3jgMnPOmbn3zj0z5478H3UT
        3A1PwxbYBXsH7ITN8BTMAm2HpodhN5yBqw35EbyJBTAu8gk9AcchN6E2fA2PQ29PfR58AcWB/4BPweWw
        Eh6Eewd47Q3adxAuQdH/MMyBG6qX4DKkAx2FtTAJmkrbNXAE0lh/wgswZt0C70Ea/HtYDmW6Fe4a4HWZ
        jGGsNPZbMAE6ycl+AhHsCrwBt0FRN8NqOATpm/D6M3gWtCnKWMY0dvjsg5xtrdIn+xeYtnKaCcVXnEMb
        bXN6BtIbNfu00ssQzk52GeQ0G85B2NahrT45PQrppJ+HRnoAwtFXVfZkXZ8nIAZoyrfgcsvJJx3Lw+xz
        H1TKnPglRPDXoUzrIezaom+ZXNNh5zdRqVUQxn7BuQ8s9B2EbVtOQpkmwg8Qto9BqXxdYViVuqZC2HXB
        134HlMmxw9Z8n9ViqDUaaBGEbVcWQpWcQ9jOt6GoPRAG7mBVWgph2xVjVMkdMWzftCGVH1ukJ7/Ouu3W
        1BTBulKW3kKTwbloe8qGVKaPCOQhpU7pDXZB3yanNOcSPjNsCLmtRocnqyZ6DcKnLdugiZxL+DxpQ2gr
        RIdHxCaaAuch/JryK+jbRB5Nw+8VG0JvQ3R4hm0qt9O/IXzr0FafpnIu4bvDhtBHEB332NBC5szfIPzL
        uABVuT0ni4Dw9zD2j8YyYTUNTIsXIeIEv8M7MB3aqnTCXZdEUW7lj4A51Fy+BNxquypdEtttCL0K0eFC
        /7eo9KOzIoiOpmktp9vhfvDJiNe2dVWa1kY9yHStWAE3ldXuJjDBm67SUiew7RfQRts2FbJziTijNo7i
        1uy2WCYP7uvgGESwtuhrjKoi1TlYTWt/3dasmhx+rD5OQ9iNFWOVVTTPQdhdd/hRVcfLO+EARP+NxtiO
        keoriP7SzJU7wD8EP0O094VjOJZaAdFutV2qYonkv6844o0HjuVZpnGJVCxCh01tEarSMn+Y+LRry/zQ
        RsgFGU9ehFb6AHKBxgMPS63l35n9kAvYJx9D5z+YOr4PucB98C50nmyqDdDnh+gPx9Zrtk5mjz5S3ucw
        F3qRedrNpctfyyLfwKhKuG959vDA9BPkJpTjLFjd+KtrqLIO9N+Gvwuc0IcDvLaasUDoUiv+1zUycg2c
        gkGzlXEY+QAAAABJRU5ErkJggg==
</value>
  </data>
</root>